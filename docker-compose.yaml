services:
    syslogFaker1:
      image: rc-syslog-faker
      container_name: syslogFaker1
      volumes:
        - ./DockerFiles/SyslogFaker/appsettings.json:/app/appsettings.json
      restart: always
      depends_on:
        - kafka1
        - kafka2
        - kafka3
    syslogFaker2:
      image: rc-syslog-faker
      container_name: syslogFaker2
      volumes:
        - ./DockerFiles/SyslogFaker/appsettings.json:/app/appsettings.json
      restart: always
      depends_on:
        - kafka1
        - kafka2
        - kafka3
    nginx:
        image: nginx:latest
        container_name: "Nginx-Reverse-Proxy"
        ports:
          - "8080:8080"
        volumes:
          - ./DockerFiles/Nginx/default.conf:/etc/nginx/conf.d/default.conf
          - ./DockerFiles/Nginx/htpasswd:/etc/nginx/conf.d/.htpasswd
        restart: always
        depends_on:
          - jobmanager
  # Apache Kafka start
    kafka1:
      image: confluentinc/cp-kafka:7.6.0
      container_name: kafka1
      hostname: kafka1
      restart: always
      ports:
        - "9092:9092"
      environment:
        KAFKA_NODE_ID: 1
        KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
        KAFKA_LISTENERS: 'INTERNAL://kafka1:29092,CONTROLLER://kafka1:29093,EXTERNAL://0.0.0.0:9092'
        KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka1:29092,EXTERNAL://localhost:9092'
        KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
        KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
        KAFKA_PROCESS_ROLES: 'broker,controller'
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
        CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
        KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      volumes:
        - ./DockerFiles/Kafka/Kafka1:/tmp/kraft-combined-logs
    kafka2:
      image: confluentinc/cp-kafka:7.6.0
      container_name: kafka2
      hostname: kafka2
      restart: always
      ports:
        - "9093:9093"
      environment:
        KAFKA_NODE_ID: 2
        KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
        KAFKA_LISTENERS: 'INTERNAL://kafka2:29092,CONTROLLER://kafka2:29093,EXTERNAL://0.0.0.0:9093'
        KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka2:29092,EXTERNAL://localhost:9093'
        KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
        KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
        KAFKA_PROCESS_ROLES: 'broker,controller'
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
        CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
        KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      volumes:
        - ./DockerFiles/Kafka/Kafka2:/tmp/kraft-combined-logs
    kafka3:
      image: confluentinc/cp-kafka:7.6.0
      container_name: kafka3
      hostname: kafka3
      restart: always
      ports:
        - "9094:9094"
      environment:
        KAFKA_NODE_ID: 3
        KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
        KAFKA_LISTENERS: 'INTERNAL://kafka3:29092,CONTROLLER://kafka3:29093,EXTERNAL://0.0.0.0:9094'
        KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka3:29092,EXTERNAL://localhost:9094'
        KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
        KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:29093,2@kafka2:29093,3@kafka3:29093'
        KAFKA_PROCESS_ROLES: 'broker,controller'
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
        CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
        KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      volumes:
        - ./DockerFiles/Kafka/Kafka3:/tmp/kraft-combined-logs
  # Apache flink start
    jobmanager:
        image: flink:1.19.0-java17
        container_name: jobmanager
        environment:
            - JOB_MANAGER_RPC_ADDRESS=jobmanager
        command: "jobmanager.sh start-foreground -D web.upload.dir=/opt/flink/upload"
        restart: always
        volumes:
          - ./DockerFiles/Flink/Upload:/opt/flink/upload
    taskmanager1:
        image: flink:1.19.0-java17
        container_name: taskmanager1
        environment:
            - JOB_MANAGER_RPC_ADDRESS=jobmanager
        command: "taskmanager.sh start-foreground -D taskmanager.numberOfTaskSlots=3"
        restart: always
        depends_on:
          - jobmanager
    taskmanager2:
        image: flink:1.19.0-java17
        container_name: "taskManager2"
        environment:
            - JOB_MANAGER_RPC_ADDRESS=jobmanager
        command: "taskmanager.sh start-foreground -D taskmanager.numberOfTaskSlots=3"
        restart: always
        depends_on:
          - jobmanager
    # ElasticSearch start
    elasticsearch1:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.19
        container_name: elasticsearch1
        environment:
          - xpack.security.enabled=true
          - xpack.security.transport.ssl.enabled=true
          - xpack.security.transport.ssl.verification_mode=certificate
          - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.pfx
          - xpack.security.transport.ssl.keystore.password=iu
          - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/elastic-certificates.pfx
          - xpack.security.transport.ssl.truststore.password=iu
          - node.name=elasticsearch1
          - cluster.name=es-docker-cluster
          - discovery.seed_hosts=elasticsearch2
          - cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - ELASTIC_PASSWORD=iu
        ports:
          - 9200:9200
        volumes:
          - ./DockerFiles/ElasticSearch/ESData1:/usr/share/elasticsearch/data
          - ./DockerFiles/ElasticSearch/Certs/elastic-certificates.pfx:/usr/share/elasticsearch/config/elastic-certificates.pfx
        restart: always
        ulimits:
          memlock:
            soft: -1
            hard: -1
    elasticsearch2:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.19
        container_name: elasticsearch2
        environment:
          - xpack.security.enabled=true
          - xpack.security.transport.ssl.enabled=true
          - xpack.security.transport.ssl.verification_mode=certificate
          - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.pfx
          - xpack.security.transport.ssl.keystore.password=iu
          - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/elastic-certificates.pfx
          - xpack.security.transport.ssl.truststore.password=iu
          - node.name=elasticsearch2
          - cluster.name=es-docker-cluster
          - discovery.seed_hosts=elasticsearch1,elasticsearch3
          - cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - ELASTIC_PASSWORD=iu
        restart: always
        volumes:
          - ./DockerFiles/ElasticSearch/ESData2:/usr/share/elasticsearch/data
          - ./DockerFiles/ElasticSearch/Certs/elastic-certificates.pfx:/usr/share/elasticsearch/config/elastic-certificates.pfx
        ulimits:
          memlock:
            soft: -1
            hard: -1
    elasticsearch3:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.19
        container_name: elasticsearch3
        environment:
          - xpack.security.enabled=true
          - xpack.security.transport.ssl.enabled=true
          - xpack.security.transport.ssl.verification_mode=certificate
          - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/elastic-certificates.pfx
          - xpack.security.transport.ssl.keystore.password=iu
          - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/elastic-certificates.pfx
          - xpack.security.transport.ssl.truststore.password=iu
          - node.name=elasticsearch3
          - cluster.name=es-docker-cluster
          - discovery.seed_hosts=elasticsearch1,elasticsearch2
          - cluster.initial_master_nodes=elasticsearch1,elasticsearch2,elasticsearch3
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
          - ELASTIC_PASSWORD=iu
        restart: always
        volumes:
          - ./DockerFiles/ElasticSearch/ESData3:/usr/share/elasticsearch/data
          - ./DockerFiles/ElasticSearch/Certs/elastic-certificates.pfx:/usr/share/elasticsearch/config/elastic-certificates.pfx
        ulimits:
          memlock:
            soft: -1
            hard: -1
    # kibana start
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.17.19
        environment:
          - ELASTICSEARCH_HOSTS=["http://elasticsearch1:9200","http://elasticsearch2:9200","http://elasticsearch3:9200"]
          - ELASTICSEARCH_USERNAME=elastic
          - ELASTICSEARCH_PASSWORD=iu
        ports:
          - 5601:5601
        restart: always
        depends_on:
          - elasticsearch1
          - elasticsearch2
          - elasticsearch3
